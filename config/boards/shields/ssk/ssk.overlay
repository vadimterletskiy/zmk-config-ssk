#include <dt-bindings/zmk/matrix_transform.h>

&pinctrl {
    spi0_default: spi0_default {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 1, 13)>,
                <NRF_PSEL(SPIM_MOSI, 0, 10)>,
                <NRF_PSEL(SPIM_MISO, 1, 11)>;
        };
    };

    spi0_sleep: spi0_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 1, 13)>,
                <NRF_PSEL(SPIM_MOSI, 0, 10)>,
                <NRF_PSEL(SPIM_MISO, 1, 11)>;
            low-power-enable;
        };
    };
};

&spi0 {
    status = "okay";
    cs-gpios = <&pro_micro 10 GPIO_ACTIVE_LOW>;
    pinctrl-0 = <&spi0_default>;
    pinctrl-1 = <&spi0_sleep>;
    pinctrl-names = "default", "sleep";
     
    shifter: 595@0 {
        compatible = "zmk,gpio-595";
        status = "okay";
        gpio-controller;
        spi-max-frequency = <200000>;
        reg = <0>;
        label = "4HC595";
        #gpio-cells = <2>;
        ngpios = <16>;
    };
};

/ {
    chosen {
        zmk,kscan = &default_kscan;     
        zmk,matrix_transform = &default_transform;               
    };

default_kscan: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        label = "default_kscan";
        diode-direction = "col2row";

        row-gpios
            = <&pro_micro 9 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)> //r0
            , <&pro_micro 8 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)> //r1
            , <&pro_micro 7 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)> //r2
            , <&pro_micro 6 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)> //r3
            , <&pro_micro 5 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)> //r4
            , <&pro_micro 4 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)> //r5Ñ„aaa==hhgfxzzxc
            ;

        col-gpios
            = <&shifter 15 GPIO_ACTIVE_LOW> //c0
            , <&shifter 14 GPIO_ACTIVE_LOW> //c1
            , <&shifter 13 GPIO_ACTIVE_LOW> //c2
            , <&shifter 12 GPIO_ACTIVE_LOW> //c3
            , <&shifter 11 GPIO_ACTIVE_LOW> //c4
            , <&shifter 10 GPIO_ACTIVE_LOW> //c5
            , <&shifter 9 GPIO_ACTIVE_LOW> //c6
            , <&shifter 8 GPIO_ACTIVE_LOW> //c7
            , <&shifter 7 GPIO_ACTIVE_LOW> //c8
            , <&shifter 6 GPIO_ACTIVE_LOW> //c9
            , <&shifter 5 GPIO_ACTIVE_LOW> //c10
            , <&shifter 4 GPIO_ACTIVE_LOW> //c11
            , <&shifter 3 GPIO_ACTIVE_LOW> //c12
            , <&shifter 2 GPIO_ACTIVE_LOW> //c13
            , <&shifter 1 GPIO_ACTIVE_LOW> //c14
            , <&shifter 0 GPIO_ACTIVE_LOW> //c15
            , <&pro_micro 20 GPIO_ACTIVE_LOW> //c16               
            , <&pro_micro 18 GPIO_ACTIVE_LOW> //c17 // todo fix (swap)
            , <&pro_micro 19 GPIO_ACTIVE_LOW> //c18 // todo fix (swap)
            ;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <19>;
        rows = <6>;
//        map = <
//            RC(0,0)     /*none*/    RC(0,2)     RC(0,3)     RC(0,4)     RC(0,5)     RC(0,6)     RC(0,7)     RC(0,8)     RC(0,9)     RC(0,10)     RC(0,11)     RC(0,12)     RC(0,13)     RC(0,14)     RC(0,15)     RC(0,16)     RC(0,17)     RC(0,18)
//            RC(1,0)     RC(1,1)     RC(1,2)     RC(1,3)     RC(1,4)     RC(1,5)     RC(1,6)     RC(1,7)     RC(1,8)     RC(1,9)     RC(1,10)     RC(1,11)     RC(1,12)     RC(1,13)     RC(1,14)     RC(1,15)     RC(1,16)     RC(1,17)     RC(1,18)
//            RC(2,0)     RC(2,1)     RC(2,2)     RC(2,3)     RC(2,4)     RC(2,5)     RC(2,6)     RC(2,7)     RC(2,8)     RC(2,9)     RC(2,10)     RC(2,11)     RC(2,12)     RC(2,13)     RC(2,14)     RC(2,15)     RC(2,16)     RC(2,17)     RC(2,18)
//            RC(3,0)     RC(3,1)     RC(3,2)     RC(3,3)     RC(3,4)     RC(3,5)     RC(3,6)     RC(3,7)     RC(3,8)     RC(3,9)     RC(3,10)     RC(3,11)     RC(3,12)     /*none*/     RC(3,14)     RC(3,15)     RC(3,16)     RC(3,17)     RC(3,18)
//            RC(4,0)     RC(4,1)     RC(4,2)     RC(4,3)     RC(4,4)     RC(4,5)     RC(4,6)     RC(4,7)     RC(4,8)     RC(4,9)     RC(4,10)     /*none*/     RC(4,12)     /*none*/     RC(4,14)     RC(4,15)     RC(4,16)     RC(4,17)     RC(4,18)
//            RC(5,0)     RC(5,1)     RC(5,2)     /*none*/    /*none*/    RC(5,5)     /*none*/    /*none*/    /*none*/    RC(5,9)     RC(5,10)     RC(5,11)     /*none*/     RC(5,13)     RC(5,14)     RC(5,15)     RC(5,16)     RC(5,17)     RC(5,18)
//        >;
                

        /* JAMES DONKEY 619  */     
        map = <
       /*  |---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|  */
       /*   &kp ESC                         &kp F1          &kp F2          &kp F3          &kp F4          &kp F5          &kp F6          &kp F7          &kp F8          &kp F9          &kp F10         &kp F11         &kp F12         &kp F13         &kp PSCRN       &kp SLCK        &kp PAUS        &kp C_AL_CALC   &uc LG(TAB)     &uc LG(LC(LEFT)) &uc LG(LC(RIGHT))*/
            RC(0,0)                         RC(0,2)         RC(0,3)         RC(0,4)         RC(0,5)         RC(0,6)         RC(0,7)         RC(0,8)         RC(0,9)         RC(0,10)        RC(0,11)        RC(0,12)        RC(0,13)        RC(3,13)        RC(0,14)        RC(0,15)        RC(0,16)        RC(5,3)         RC(5,4)         RC(5,6)         RC(5,7) 
       /*  |---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|  */
       /*   &kp GRAVE       &kp N1          &kp N2          &kp N3          &kp N4          &kp N5          &kp N6          &kp N7          &kp N8          &kp N9          &kp N0          &kp MINUS       &kp EQUAL       &kp BSPC        &kp INS         &kp HOME        &kp PG_UP       &kp KP_NLCK     &kp KP_SLASH    &kp KP_ASTERISK &kp KP_MINUS                      */
            RC(1,0)         RC(1,2)         RC(1,2)         RC(1,3)         RC(1,4)         RC(1,5)         RC(1,6)         RC(1,7)         RC(1,8)         RC(1,9)         RC(1,10)        RC(1,11)        RC(1,12)        RC(1,13)        RC(1,14)        RC(1,15)        RC(1,16)        RC(1,18)        RC(1,17)        RC(0,18)        RC(0,17)
       /*  |---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|  */
       /*   &kp TAB         &kp Q           &kp W           &kp E           &kp R           &kp T           &kp Y           &kp U           &kp I           &kp O           &kp P           &kp LBKT        &kp RBKT        &kp BSLH        &kp DEL         &kp END         &kp PG_DN       &kp KP_N7       &kp KP_N8       &kp KP_N9       &kp KP_PLUS                       */
            RC(2,0)         RC(2,1)         RC(2,2)         RC(2,3)         RC(2,4)         RC(2,5)         RC(2,6)         RC(2,7)         RC(2,8)         RC(2,9)         RC(2,10)        RC(2,11)        RC(2,12)        RC(2,13)        RC(2,14)        RC(2,15)        RC(2,16)        RC(2,18)        RC(2,17)        RC(3,14)        RC(3,15)                             
       /*  |---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|  */
       /*   &kp CLCK        &kp A           &kp S           &kp D           &kp F           &kp G           &kp H           &kp J           &kp K           &kp L           &kp SEMI        &kp SQT         &kp RET                         &kp KP_N4       &kp KP_N5       &kp KP_N6                                                                                         */
            RC(3,0)         RC(3,1)         RC(3,2)         RC(3,3)         RC(3,4)         RC(3,5)         RC(3,6)         RC(3,7)         RC(3,8)         RC(3,9)         RC(3,10)        RC(3,11)        RC(3,12)                        RC(3,18)        RC(3,17)        RC(4,14)
       /*  |---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|  */
       /*   &kp LSHFT       &kp Z           &kp X           &kp C           &kp V           &kp B           &kp N           &kp M           &kp COMMA       &kp DOT         &kp FSLH                        &kp RSHFT                       &kp UP          &kp KP_N1       &kp KP_N2       &kp KP_N3                                                                         */
            RC(4,0)         RC(4,1)         RC(4,2)         RC(4,3)         RC(4,4)         RC(4,5)         RC(4,6)         RC(4,7)         RC(4,8)         RC(4,9)         RC(4,10)                        RC(4,12)                        RC(4,15)        RC(4,18)        RC(4,17)        RC(4,16)        
       /*  |---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|  */
       /*   &kp LCTRL       &kp LGUI        &kp LALT                                        &kp SPACE                                                       &kp RALT        &kp RGUI        &mo 3                           &kp RCTRL       &kp LEFT        &kp DOWN        &kp RIGHT       &kp KP_N0       &kp KP_DOT      &kp KP_ENTER                                      */
            RC(5,0)         RC(5,1)         RC(5,2)                                         RC(5,5)                                                         RC(5,9)         RC(5,10)        RC(5,11)                        RC(5,13)        RC(5,14)        RC(5,15)        RC(5,16)        RC(5,17)        RC(5,18)        RC(3,16)
       /*  |---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|---------------|  */
       /*   */
       /*  &               &out OUT_BLE    &out OUT_24G    &out OUT_CHG    &out OUT_CHGD                                                                                                                                                                                                                                  */
       >;
    };     
};